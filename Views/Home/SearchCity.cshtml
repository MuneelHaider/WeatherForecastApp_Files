@{
    ViewData["Title"] = "Search City - Weather Forecast";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/site.css">
    <link rel="stylesheet" href="~/css/search.css">
    <title>@ViewData["Title"]</title>
</head>
<body>

    <div class="container">
        <div class="search-section">
            <h1>Search for City Weather</h1>
            <input type="text" id="cityInput" class="search-input" placeholder="Enter city name..." aria-label="City name">
            <button onclick="fetchWeather()" class="search-button">Search</button>
        </div>

        <div class="weather-details">
            <div class="current-weather" id="currentWeather">
                <!-- Current weather details will be injected here -->
            </div>
            <div class="forecast-details" id="forecastDetails">
                <!-- Forecast details will be injected here -->
            </div>
        </div>
    </div>

    <script>
        function fetchWeather() {
            const city = document.getElementById('cityInput').value;
            const apiKey = '9b7b2ba2f0ec4d89a48c410cc6179f2a'; 
            const apiUrl = `https://api.weatherbit.io/v2.0/current?city=${city}&key=${apiKey}&units=M`;

            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    const weather = data.data[0];
                    document.getElementById('currentWeather').innerHTML = `<div class="weather-card">
                                                                               <h2>Current Weather in ${city}</h2>
                                                                               <p>Temperature: ${weather.temp} °C</p>
                                                                               <p>Description: ${weather.weather.description}</p>
                                                                               <p>Humidity: ${weather.rh}%</p>
                                                                               <p>Wind Speed: ${(weather.wind_spd * 3.6).toFixed(2)} km/h</p>
                                                                           </div>`;
                })
                .catch(error => console.error('Error fetching current weather:', error));

            fetchForecast(city);
        }

        function fetchForecast(city) {
            const apiKey = '9b7b2ba2f0ec4d89a48c410cc6179f2a';
            const forecastUrl = `https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&key=${apiKey}&units=M`;

            fetch(forecastUrl)
                .then(response => response.json())
                .then(data => {
                    const forecastData = data.data.slice(0, 5);  
                    let forecastHtml = `<h1>5-Day Forecast for ${city}</h1><div class="forecast-grid">`;
                    forecastData.forEach(day => {
                        forecastHtml += `<div class="forecast-card">
                                             <p><strong>Date:</strong> ${new Date(day.valid_date).toDateString()}</p>
                                             <p><strong>Temperature:</strong> ${day.temp} °C</p>
                                             <p><strong>Description:</strong> ${day.weather.description}</p>
                                         </div>`;
                    });
                    forecastHtml += '</div>';
                    document.getElementById('forecastDetails').innerHTML = forecastHtml;
                })
                .catch(error => console.error('Error fetching forecast:', error));
        }
    </script>

</body>
</html>
